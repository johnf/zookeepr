#
# zookeepr - Pylons configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
#email_to = you@yourdomain.com # Uncomment and replace with the address which should receive any error reports
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[server:fastcgi]
use = egg:Flup#fcgi_thread
socket = /tmp/fastcgi.socket

[app:main]
use = egg:zookeepr
full_stack = true
static_files = true

cache_dir = %(here)s/data
beaker.session.key = zookeepr
beaker.session.secret = ${app_instance_secret}
app_instance_uuid = ${app_instance_uuid}

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# SQLAlchemy database URL
sqlalchemy.url = sqlite:///development.db
sqlalchemy.convert_unicode = true

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Configure authentication
authkit.setup.method = forward, cookie
authkit.cookie.secret = secret string
authkit.forward.signinpath = /person/signin
authkit.cookie.signoutpath = /person/signout
authkit.setup.intercept = 401, 403
authkit.cookie_enforce = True

# IIS proxies apparently send an incorrect IP in their headers, which means people 
# forced to come through those servers cannot log in.
authkit.cookie.includeip = False

# Hostname for URLs
host_name = localhost

# Logging configuration
[loggers]
keys = root, routes, zookeepr, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware

[logger_zookeepr]
level = DEBUG
handlers =
qualname = zookeepr

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
